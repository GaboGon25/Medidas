<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>